name: Build and Release Electron App

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        include:
          - os: windows-latest
            platform: win
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org/'
        
    - name: Clean package manager files
      run: |
        rm -f pnpm-lock.yaml
        rm -f yarn.lock
        echo "Using npm as package manager"
      shell: bash
        
    - name: Install dependencies
      run: |
        npm ci
        npm ls --depth=0
      
    # Windows-only build - no Linux or macOS steps needed
        
    - name: Create data directory
      run: |
        mkdir -p data
        echo '[]' > data/history.json
        echo '[]' > data/targetLocations.json
        echo '{}' > data/settings.json
      shell: bash
      
    - name: Run tests
      run: npm test
      continue-on-error: true
      
    - name: Build Next.js app
      run: npm run build
      
    - name: Build Electron app
      run: npm run electron:build:${{ matrix.platform }}
      env:
        DEBUG: electron-builder
        DEBUG_COLORS: true
        CSC_IDENTITY_AUTO_DISCOVERY: false
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true
        USE_HARD_LINKS: false
        
    - name: List build output
      run: |
        echo "Build completed, listing output:"
        ls -la dist/ || echo "No dist directory found"
        find . -name "*.exe" 2>/dev/null || echo "No build artifacts found"
        echo "Checking for any error logs:"
        find . -name "*.log" -exec echo "Found log: {}" \; -exec cat {} \; 2>/dev/null || echo "No log files found"
      shell: bash
      
    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: |
          dist/*.exe
        retention-days: 30
        


  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          windows-build/*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
